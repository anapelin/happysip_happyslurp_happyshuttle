library(sf)
library(tidyverse)
library(rgeos)
library(ggplot2)
library(psych)
library(spatstat)
library(spdep)
library(jsonlite)
library(dplyr)
library(osmdata)
# 2.1 Basemap - Singapore Subzones (Polygons Vectors)
subzones <- st_read(dsn = "dataset/basemap", layer = "MP14_SUBZONE_NO_SEA_PL")
# 2.2 Nightlife (Bars + Clubs) Data (Points Vectors)
query <- opq(bbox = "singapore, singapore") %>%
add_osm_feature(key = "amenity", value = c("bar","biergarten", "pub", "nightclub"))
rawdata_nightlife <- osmdata_sf(query)
nightlife_points <- rawdata_nightlife$osm_points %>% drop_na(name) %>% filter(amenity %in% c("bar","biergarten", "pub", "nightclub")) %>% dplyr::select(name, amenity, `addr:postcode`, `addr:street`)
nightlife_plg <- rawdata_nightlife$osm_polygons %>% drop_na(name) %>% filter(amenity %in% c("bar","biergarten", "pub", "nightclub")) %>% dplyr::select(name, amenity, `addr:postcode`, `addr:street`) %>% st_centroid()
nightlife <- rbind(nightlife_points, nightlife_plg)
# 2.3 Midnight Restaurants Crowd Density Data
rawdata_restaurants <- read.csv("dataset/besttime/restaurants.csv")
# Restaurant DataFrame: lat, lng, name of restaurant, is_midnight, crowd density on fri and sat
restaurants <- rawdata_restaurants %>% dplyr::select(name, lat, lon, midnight_restaurant, fri_cd, sat_cd)
restaurants_coordinates <- cbind(restaurants$lon, restaurants$lat)
# 2.4 Population - Youth Data (Points Vectors)
population <- read.csv("dataset/filteredSG_population_density.csv")
yth_data <- read.csv("dataset/filteredSG_population_density.csv") %>% dplyr::select(longitude, latitude, youth)
coordinates(population) <- ~longitude+latitude
# 2.5 HDB Data (Points Vectors)
hdb <- read.csv("dataset/hdb.csv") %>% mutate(addr = paste(blk_no,street)) %>% dplyr::select(addr,lat,lng)
# 2.6 Bus Stops Data (Points Vectors)
bus_data <- data.frame()
for(i in 0:10) {
file_name <- paste0("dataset/busstops/response(", i, ").json")
# Handle the case for response.json (without the index)
if(i == 0) {
file_name <- "dataset/busstops/response.json"
}
json_read <- fromJSON(file_name, flatten = TRUE)
bus_data <- rbind(bus_data, json_read$value)
}
nightlife_points <- rawdata_nightlife$osm_points %>% drop_na(name) %>% dplyr::select(name, amenity, `addr:postcode`, `addr:street`)
nightlife_plg <- rawdata_nightlife$osm_polygons %>% drop_na(name) %>% dplyr::select(name, amenity, `addr:postcode`, `addr:street`) %>% st_centroid()
nightlife <- rbind(nightlife_points, nightlife_plg)
# 3.1 Nightlife Locations
# Create a Nightlife Spatial Points DataFrame
nightlife_sf <- st_transform(nightlife, crs=st_crs(subzones)) # project to basemap's CRS
# Convert to Nightlife Point Pattern dataset
nightlife_ppp <- as.ppp(nightlife_sf)
# Combine with subzones for Nightlife Density DataFrame
nightlife_subzone <- st_join(subzones, nightlife_sf)
nightlife_density_subzone <- nightlife_subzone %>%
group_by(SUBZONE_N) %>%
summarize(bar_density = sum(!is.na(name)))
# 3.2 Midnight Restaurants
# Create a Restaurants Spatial Points DataFrame
restaurants_sp_data <- SpatialPointsDataFrame(restaurants_coordinates, data = data.frame(restaurants), proj4string = CRS("+proj=longlat +datum=WGS84"))
restaurants_sf <- st_as_sf(restaurants_sp_data)
restaurants_sf <- st_transform(restaurants_sf, crs = st_crs(subzones)) # project to basemap's CRS
# Convert to Restaurants Point Pattern dataset
restaurants_ppp <- as.ppp(restaurants_sf)
# Combine with subzones for Restaurants Density DataFrame
restaurants_subzone <- st_join(subzones, restaurants_sf)
restaurants_density_subzone <- restaurants_subzone %>%
group_by(SUBZONE_N) %>%
summarize(restaurants_density = sum(!is.na(name)))
# 3.3 Population - Youth Density
# Create a Population Raster Dataset
r <- raster(extent(population), resolution=c(0.001, 0.001)) # Here 0.001 is an example resolution. Adjust as necessary.
under5_raster <- rasterize(population, r, field="under5", fun=mean)
# Convert to Population Point Pattern dataset
ppp_data <- as.ppp(population)
# Create a Youth Spatial Polygon DataFrame
yth_sf <- st_as_sf(yth_data, coords = c("longitude", "latitude"), crs = 4326)
yth_sf <- st_transform(yth_sf, crs = st_crs(subzones)) # project to basemap's CRS
# 3.4 HDB
# 3.5 Bus Stops
bus_sf <- st_as_sf(bus_data, coords = c("Longitude", "Latitude"), crs = 4326)
bus_sf <- st_transform(bus_sf, crs = st_crs(subzones)) # project to basemap's CRS
# Map 1: View of All Distributions (with toggles for layers)
tmap_mode('view')
tmap_options(check.and.fix = TRUE)
tm_shape(subzones) + tm_borders() + tm_basemap(server='Esri.WorldGrayCanvas') +
tm_shape(nightlife_sf) + tm_dots(size = 0.0075, col = "red") + # Nightlife locations
tm_shape(restaurants_sf) + tm_dots(size = 0.0075, col = "midnight_restaurant", palette = c("yellow", "blue")) + # Restaurants
# tm_shape(yth_sf) + tm_dots(size = 0.0075, col = c("pink")) + # Restaurants
tm_scale_bar(width = 0.15) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.25,
legend.title.size = 0.5,
title="Nightlife location in Singapore",
title.position = c('left', 'bottom'))
nightlife_points <- rawdata_nightlife$osm_points %>% drop_na(name) %>%
filter(!`addr:country` %in% c('Malaysia', 'Indonesia')) %>%
dplyr::select(name, amenity, `addr:postcode`, `addr:street`)
nightlife_plg <- rawdata_nightlife$osm_polygons %>% drop_na(name) %>%
filter(!`addr:country` %in% c('Malaysia', 'Indonesia')) %>%
dplyr::select(name, amenity, `addr:postcode`, `addr:street`) %>%
st_centroid()
nightlife <- rbind(nightlife_points, nightlife_plg)
nightlife_points
View(nightlife_points)
View(rawdata_nightlife$osm_points)
nightlife_points <- rawdata_nightlife$osm_points %>% drop_na(name) %>%
dplyr::select(name, amenity, `addr:postcode`, `addr:street`)
nightlife_plg <- rawdata_nightlife$osm_polygons %>% drop_na(name) %>%
dplyr::select(name, amenity, `addr:postcode`, `addr:street`) %>%
st_centroid()
nightlife <- rbind(nightlife_points, nightlife_plg)
# Map 1: View of All Distributions (with toggles for layers)
tmap_mode('plot')
tmap_options(check.and.fix = TRUE)
tm_shape(subzones) + tm_borders() + tm_basemap(server='Esri.WorldGrayCanvas') +
tm_shape(nightlife_sf) + tm_dots(size = 0.0075, col = "red") + # Nightlife locations
tm_shape(restaurants_sf) + tm_dots(size = 0.0075, col = "midnight_restaurant", palette = c("yellow", "blue")) + # Restaurants
# tm_shape(yth_sf) + tm_dots(size = 0.0075, col = c("pink")) + # Restaurants
tm_scale_bar(width = 0.15) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.25,
legend.title.size = 0.5,
title="Nightlife location in Singapore",
title.position = c('left', 'bottom'))
# Map 1: View of All Distributions (with toggles for layers)
tmap_mode('view')
tmap_options(check.and.fix = TRUE)
tm_shape(subzones) + tm_borders() + tm_basemap(server='Esri.WorldGrayCanvas') +
tm_shape(nightlife_sf) + tm_dots(size = 0.0075, col = "red") + # Nightlife locations
tm_shape(restaurants_sf) + tm_dots(size = 0.0075, col = "midnight_restaurant", palette = c("yellow", "blue")) + # Restaurants
# tm_shape(yth_sf) + tm_dots(size = 0.0075, col = c("pink")) + # Restaurants
tm_scale_bar(width = 0.15) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.25,
legend.title.size = 0.5,
title="Nightlife location in Singapore",
title.position = c('left', 'bottom'))
# 2.1 Basemap - Singapore Subzones (Polygons Vectors)
subzones <- st_read(dsn = "dataset/basemap", layer = "MP14_SUBZONE_NO_SEA_PL")
border <- st_boundary(subzones)
tmap_mode('view')
tmap_options(check.and.fix = TRUE)
tm_shape(border) + tm_borders() + tm_basemap(server='Esri.WorldGrayCanvas') +
tm_shape(nightlife_sf) + tm_dots(size = 0.0075, col = "red") + # Nightlife locations
tm_shape(restaurants_sf) + tm_dots(size = 0.0075, col = "midnight_restaurant", palette = c("yellow", "blue")) + # Restaurants
# tm_shape(yth_sf) + tm_dots(size = 0.0075, col = c("pink")) + # Restaurants
tm_scale_bar(width = 0.15) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.25,
legend.title.size = 0.5,
title="Nightlife location in Singapore",
title.position = c('left', 'bottom'))
tm_shape(border) + tm_borders()
tm_shape(border) + tm_borders(col='lightblue')
tm_shape(border) + tm_lines(col='lightblue')
border <- st_read(dsn = "dataset/basemap", layer = "SGP_adm0")
border <- st_read(dsn = "dataset/basemap", layer = "SGP_adm0")
# 2.1 Basemap - Singapore Subzones (Polygons Vectors)
subzones <- st_read(dsn = "dataset/basemap", layer = "MP14_SUBZONE_NO_SEA_PL")
border <- st_read(dsn = "dataset/basemap", layer = "SGP_adm0")
tm_shape(border) + tm_lines(col='lightblue')
tm_shape(border) + tm_borders(col='lightblue')
tm_shape(border) + tm_borders(col='lightblue')
tmap_mode('plot')
tmap_options(check.and.fix = TRUE)
tm_shape(border) + tm_borders(col='lightblue') + tm_basemap(server='Esri.WorldGrayCanvas') +
tm_shape(nightlife_sf) + tm_dots(size = 0.0075, col = "red") + # Nightlife locations
tm_shape(restaurants_sf) + tm_dots(size = 0.0075, col = "midnight_restaurant", palette = c("yellow", "blue")) + # Restaurants
# tm_shape(yth_sf) + tm_dots(size = 0.0075, col = c("pink")) + # Restaurants
tm_scale_bar(width = 0.15) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.25,
legend.title.size = 0.5,
title="Nightlife location in Singapore",
title.position = c('left', 'bottom'))
border <- st_transform(border, crs=st_crs(subzones))
# Map 1: View of All Distributions (with toggles for layers)
tmap_mode('plot')
tmap_options(check.and.fix = TRUE)
tm_shape(border) + tm_borders(col='lightblue') + tm_basemap(server='Esri.WorldGrayCanvas') +
tm_shape(nightlife_sf) + tm_dots(size = 0.0075, col = "red") + # Nightlife locations
tm_shape(restaurants_sf) + tm_dots(size = 0.0075, col = "midnight_restaurant", palette = c("yellow", "blue")) + # Restaurants
# tm_shape(yth_sf) + tm_dots(size = 0.0075, col = c("pink")) + # Restaurants
tm_scale_bar(width = 0.15) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.25,
legend.title.size = 0.5,
title="Nightlife location in Singapore",
title.position = c('left', 'bottom'))
subzones <- st_read(dsn = "dataset/basemap", layer = "MP14_SUBZONE_NO_SEA_PL")
border <- st_read(dsn = "dataset/basemap", layer = "SGP_adm0")
border <- st_transform(border, crs=st_crs(subzones))
tmap_mode('plot')
tmap_options(check.and.fix = TRUE)
tm_shape(border) + tm_borders(col='black') +
tm_shape(nightlife_sf) + tm_dots(size = 0.0075, col = "red") + # Nightlife locations
tm_shape(restaurants_sf) + tm_dots(size = 0.0075, col = "midnight_restaurant", palette = c("yellow", "blue")) + # Restaurants
# tm_shape(yth_sf) + tm_dots(size = 0.0075, col = c("pink")) + # Restaurants
tm_scale_bar(width = 0.15) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.25,
legend.title.size = 0.5,
title="Nightlife location in Singapore",
title.position = c('left', 'bottom'))
# Map 1: View of All Distributions (with toggles for layers)
tmap_mode('view')
tmap_options(check.and.fix = TRUE)
tm_shape(base_map) + tm_borders(col='black') +
tm_shape(nightlife_sf) + tm_dots(size = 0.0075, col = "red") + # Nightlife locations
tm_shape(restaurants_sf) + tm_dots(size = 0.0075, col = "midnight_restaurant", palette = c("yellow", "blue")) + # Restaurants
# tm_shape(yth_sf) + tm_dots(size = 0.0075, col = c("pink")) + # Restaurants
tm_scale_bar(width = 0.15) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.25,
legend.title.size = 0.5,
title="Nightlife location in Singapore",
title.position = c('left', 'bottom'))
base_map <- st_read(dsn = "dataset/basemap", layer = "SGP_adm0")
base_map <- st_transform(border, crs=st_crs(subzones))
# Map 1: View of All Distributions (with toggles for layers)
tmap_mode('view')
tmap_options(check.and.fix = TRUE)
tm_shape(base_map) + tm_borders(col='black') +
tm_shape(nightlife_sf) + tm_dots(size = 0.0075, col = "red") + # Nightlife locations
tm_shape(restaurants_sf) + tm_dots(size = 0.0075, col = "midnight_restaurant", palette = c("yellow", "blue")) + # Restaurants
# tm_shape(yth_sf) + tm_dots(size = 0.0075, col = c("pink")) + # Restaurants
tm_scale_bar(width = 0.15) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.25,
legend.title.size = 0.5,
title="Nightlife location in Singapore",
title.position = c('left', 'bottom'))
?tmap_mode
# Map 1: View of All Distributions (with toggles for layers)
tmap_mode('plot')
tmap_options(check.and.fix = TRUE)
tm_shape(base_map) + tm_borders(col='black') +
tm_shape(nightlife_sf) + tm_dots(size = 0.0075, col = "red") + # Nightlife locations
tm_shape(restaurants_sf) + tm_dots(size = 0.0075, col = "midnight_restaurant", palette = c("yellow", "blue")) + # Restaurants
# tm_shape(yth_sf) + tm_dots(size = 0.0075, col = c("pink")) + # Restaurants
tm_scale_bar(width = 0.15) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.25,
legend.title.size = 0.5,
title="Nightlife location in Singapore",
title.position = c('left', 'bottom'))
nightlife_sf <- st_intersection(nightlife_sf, base_map)
nightlife_sf <- st_transform(nightlife, crs=st_crs(subzones)) # project to basemap's CRS
tm_shape(base_map) + tm_borders(col='black') +
tm_shape(nightlife_sf) + tm_dots(size = 0.0075, col = "red") + # Nightlife locations
tm_shape(restaurants_sf) + tm_dots(size = 0.0075, col = "midnight_restaurant", palette = c("yellow", "blue")) + # Restaurants
# tm_shape(yth_sf) + tm_dots(size = 0.0075, col = c("pink")) + # Restaurants
tm_scale_bar(width = 0.15) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.25,
legend.title.size = 0.5,
title="Nightlife location in Singapore",
title.position = c('left', 'bottom'))
nightlife_sf <- st_transform(nightlife, crs=st_crs(subzones)) # project to basemap's CRS
nightlife_sf <- st_intersection(nightlife_sf, base_map) # remove extra points
tm_shape(base_map) + tm_borders(col='black') +
tm_shape(nightlife_sf) + tm_dots(size = 0.0075, col = "red") + # Nightlife locations
tm_shape(restaurants_sf) + tm_dots(size = 0.0075, col = "midnight_restaurant", palette = c("yellow", "blue")) + # Restaurants
# tm_shape(yth_sf) + tm_dots(size = 0.0075, col = c("pink")) + # Restaurants
tm_scale_bar(width = 0.15) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.25,
legend.title.size = 0.5,
title="Nightlife location in Singapore",
title.position = c('left', 'bottom'))
# Convert to Nightlife Point Pattern dataset
nightlife_ppp <- as.ppp(nightlife_sf)
nightlife_ppp
summary(nightlife_ppp)
plot(nightlife_ppp)
nightlife_subzone <- st_join(subzones, nightlife_sf)
nightlife_density_subzone <- nightlife_subzone %>%
group_by(SUBZONE_N) %>%
summarize(bar_density = n())
nightlife_density_subzone
View(nightlife_density_subzone)
View(nightlife_density_subzone)
View(nightlife_subzone)
View(subzones)
View(nightlife_sf)
View(base_map)
base_map <- st_read(dsn = "dataset/basemap", layer = "SGP_adm0") %>% dplyr::select(NAME_ISO)
base_map <- st_transform(border, crs=st_crs(subzones))
nightlife_sf <- st_transform(nightlife, crs=st_crs(subzones)) # project to basemap's CRS
nightlife_sf <- st_intersection(nightlife_sf, base_map) # remove extra points
nightlife_subzone <- st_join(subzones, nightlife_sf)
nightlife_density_subzone <- nightlife_subzone %>%
group_by(SUBZONE_N) %>%
summarize(bar_density = sum(!is.na(name)))
View(nightlife_subzone)
# Combine with subzones for Nightlife Density DataFrame
nightlife_subzone <- st_join(subzones, nightlife_sf)
View(nightlife_subzone)
base_map <- st_read(dsn = "dataset/basemap", layer = "SGP_adm0") %>% dplyr::select(NAME_ISO)
base_map <- st_read(dsn = "dataset/basemap", layer = "SGP_adm0")['NAME_ISO']
base_map <- st_read(dsn = "dataset/basemap", layer = "SGP_adm0")['NAME_ISO']
base_map <- st_transform(border, crs=st_crs(subzones))
base_map
View(base_map)
base_map <- st_read(dsn = "dataset/basemap", layer = "SGP_adm0") %>% select(ISO)
base_map <- st_read(dsn = "dataset/basemap", layer = "SGP_adm0")
base_map %>% select(ISO) %>% st_transform(crs=st_crs(subzones))
nightlife_sf <- st_transform(nightlife, crs=st_crs(subzones)) # project to basemap's CRS
nightlife_sf <- st_intersection(nightlife_sf, base_map) # remove extra points
crs(base_map)
base_map %>% select(ISO) %>% st_transform(crs=st_crs(subzones))
base_map <- st_read(dsn = "dataset/basemap", layer = "SGP_adm0")
base_map %>% select(ISO)
base_map <- st_transform(base_map, crs=st_crs(subzones))
nightlife_sf <- st_transform(nightlife, crs=st_crs(subzones)) # project to basemap's CRS
nightlife_sf <- st_intersection(nightlife_sf, base_map) # remove extra points
nightlife_sf
View(nightlife_sf)
# Create a Nightlife Spatial Points DataFrame
nightlife_sf <- st_transform(nightlife, crs=st_crs(subzones)) # project to basemap's CRS
nightlife_sf <- st_intersection(nightlife_sf, base_map) # remove extra points
View(nightlife_sf)
nightlife <- rbind(nightlife_points, nightlife_plg)
# Create a Nightlife Spatial Points DataFrame
nightlife_sf <- st_transform(nightlife, crs=st_crs(subzones)) # project to basemap's CRS
nightlife_sf <- st_intersection(nightlife_sf, base_map) # remove extra points
View(nightlife_sf)
library(GISTools)
library(raster)
library(tmap)
library(rgdal)
library(maptools)
library(sp)
library(sf)
library(tidyverse)
library(rgeos)
library(ggplot2)
library(psych)
library(spatstat)
library(spdep)
library(jsonlite)
library(dplyr)
library(osmdata)
library(GISTools)
library(raster)
library(tmap)
library(rgdal)
library(maptools)
library(sp)
library(sf)
library(tidyverse)
library(rgeos)
library(ggplot2)
library(psych)
library(spatstat)
library(spdep)
library(jsonlite)
library(dplyr)
library(osmdata)
# 2.1 Basemap - Singapore Subzones (Polygons Vectors)
subzones <- st_read(dsn = "dataset/basemap", layer = "MP14_SUBZONE_NO_SEA_PL")
base_map <- st_read(dsn = "dataset/basemap", layer = "SGP_adm0")
base_map %>% select(ISO)
base_map <- st_transform(base_map, crs=st_crs(subzones))
# 2.2 Nightlife (Bars + Clubs) Data (Points Vectors)
query <- opq(bbox = "singapore, singapore") %>%
add_osm_feature(key = "amenity", value = c("bar","biergarten", "pub", "nightclub"))
rawdata_nightlife <- osmdata_sf(query)
# 2.1 Basemap - Singapore Subzones (Polygons Vectors)
subzones <- st_read(dsn = "dataset/basemap", layer = "MP14_SUBZONE_NO_SEA_PL")
base_map <- st_read(dsn = "dataset/basemap", layer = "SGP_adm0")
base_map %>% select(ISO)
base_map <- st_transform(base_map, crs=st_crs(subzones))
# 2.2 Nightlife (Bars + Clubs) Data (Points Vectors)
query <- opq(bbox = "singapore, singapore") %>%
add_osm_feature(key = "amenity", value = c("bar","biergarten", "pub", "nightclub"))
rawdata_nightlife <- osmdata_sf(query)
nightlife_points <- rawdata_nightlife$osm_points %>% drop_na(name) %>%
dplyr::select(name, amenity, `addr:postcode`, `addr:street`)
nightlife_plg <- rawdata_nightlife$osm_polygons %>% drop_na(name) %>%
dplyr::select(name, amenity, `addr:postcode`, `addr:street`) %>%
st_centroid()
nightlife <- rbind(nightlife_points, nightlife_plg)
# 2.3 Midnight Restaurants Crowd Density Data
rawdata_restaurants <- read.csv("dataset/besttime/restaurants.csv")
# Restaurant DataFrame: lat, lng, name of restaurant, is_midnight, crowd density on fri and sat
restaurants <- rawdata_restaurants %>% dplyr::select(name, lat, lon, midnight_restaurant, fri_cd, sat_cd)
restaurants_coordinates <- cbind(restaurants$lon, restaurants$lat)
# 2.4 Population - Youth Data (Points Vectors)
population <- read.csv("dataset/filteredSG_population_density.csv")
yth_data <- read.csv("dataset/filteredSG_population_density.csv") %>% dplyr::select(longitude, latitude, youth)
coordinates(population) <- ~longitude+latitude
# 2.5 HDB Data (Points Vectors)
hdb <- read.csv("dataset/hdb.csv") %>% mutate(addr = paste(blk_no,street)) %>% dplyr::select(addr,lat,lng)
# 2.6 Bus Stops Data (Points Vectors)
bus_data <- data.frame()
for(i in 0:10) {
file_name <- paste0("dataset/busstops/response(", i, ").json")
# Handle the case for response.json (without the index)
if(i == 0) {
file_name <- "dataset/busstops/response.json"
}
json_read <- fromJSON(file_name, flatten = TRUE)
bus_data <- rbind(bus_data, json_read$value)
}
# Create a Nightlife Spatial Points DataFrame
nightlife_sf <- st_transform(nightlife, crs=st_crs(subzones)) # project to basemap's CRS
nightlife_sf <- st_intersection(nightlife_sf, base_map) # remove extra points
View(nightlife_sf)
base_map <- base_map %>% select(ISO)
# Create a Nightlife Spatial Points DataFrame
nightlife_sf <- st_transform(nightlife, crs=st_crs(subzones)) # project to basemap's CRS
nightlife_sf <- st_intersection(nightlife_sf, base_map) # remove extra points
View(nightlife_sf)
?as.ppp
# 3.1 Nightlife Locations
View(nightlife_sf)
nightlife_subzone <- st_join(subzones, nightlife_sf)
nightlife_density_subzone <- nightlife_subzone %>%
group_by(SUBZONE_N) %>%
summarize(bar_density = sum(!is.na(name)))
View(nightlife_density_subzone)
tmap_mode('plot')
tmap_options(check.and.fix = TRUE)
tm_shape(base_map) + tm_borders(col='black') +
tm_shape(nightlife_sf) + tm_dots(size = 0.0075, col = "red") + # Nightlife locations
tm_scale_bar(width = 0.15) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.25,
legend.title.size = 0.5,
title="Nightlife location in Singapore",
title.position = c('left', 'bottom'))
tm_shape(base_map) + tm_borders(col='black') +
tm_shape(nightlife_density_subzone) + tm_polygons(palatte = "red") +
tm_scale_bar(width = 0.15) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.25,
legend.title.size = 0.5,
title="Nightlife location in Singapore",
title.position = c('left', 'bottom'))
tm_shape(base_map) + tm_borders(col='black') +
tm_shape(nightlife_density_subzone) + tm_polygons(col = "nightlife_density", palatte = c("red")) +
tm_scale_bar(width = 0.15) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.25,
legend.title.size = 0.5,
title="Nightlife location in Singapore",
title.position = c('left', 'bottom'))
tm_shape(base_map) + tm_borders(col='black') +
tm_shape(nightlife_density_subzone) + tm_polygons(col = "nightlife_density", palatte = c("reds")) +
tm_scale_bar(width = 0.15) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.25,
legend.title.size = 0.5,
title="Nightlife location in Singapore",
title.position = c('left', 'bottom'))
tm_shape(base_map) + tm_borders(col='black') +
tm_shape(nightlife_density_subzone) + tm_polygons(col = "nightlife_density", palatte = "reds") +
tm_scale_bar(width = 0.15) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.25,
legend.title.size = 0.5,
title="Nightlife location in Singapore",
title.position = c('left', 'bottom'))
tm_shape(base_map) + tm_borders(col='black') +
tm_shape(nightlife_density_subzone) + tm_polygons(col = "nightlife_density") +
tm_scale_bar(width = 0.15) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.25,
legend.title.size = 0.5,
title="Nightlife location in Singapore",
title.position = c('left', 'bottom'))
nightlife_subzone <- st_join(subzones, nightlife_sf)
nightlife_density_subzone <- nightlife_subzone %>%
group_by(SUBZONE_N) %>%
summarize(nightlife_density = sum(!is.na(name)))
tm_shape(base_map) + tm_borders(col='black') +
tm_shape(nightlife_density_subzone) + tm_polygons(col = "nightlife_density") +
tm_scale_bar(width = 0.15) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.25,
legend.title.size = 0.5,
title="Nightlife location in Singapore",
title.position = c('left', 'bottom'))
tmap_mode('plot')
tmap_options(check.and.fix = TRUE)
tm_shape(base_map) + tm_borders(col='black') +
tm_shape(nightlife_density_subzone) + tm_polygons(col = "nightlife_density") +
tm_scale_bar(width = 0.15) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.25,
legend.title.size = 0.5,
title="Nightlife location in Singapore",
title.position = c('left', 'bottom'))
