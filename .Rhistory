tm_compass(type="8star", size = 2) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.5,
legend.title.size = 1,
title="Nightlife locations centers in Singapore",
title.position = c('left', 'top'))
tm_shape(base_map) + tm_borders() +
tm_shape(nightlife_centers_poly) + tm_fill(col = 'kde') + tm_borders() +
tm_shape(nightlife_centers_points) + tm_bubbles(size = 0.005, col = "black")  +
tm_compass(type="8star", size = 2) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.5,
legend.title.size = 1,
title="Nightlife locations centers in Singapore",
title.position = c('left', 'top'))
tm_shape(base_map) + tm_borders() +
tm_shape(nightlife_centers_poly) + tm_fill(col = 'kde') + tm_borders() +
tm_shape(closest_nightlife_busstops) + tm_bubbles(size = 0.005, col = "black")  +
tm_compass(type="8star", size = 2) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.5,
legend.title.size = 1,
title="Busstops closest to centers in Singapore",
title.position = c('left', 'top'))
closest_nightlife_busstops_buffer <- st_buffer(closest_nightlife_busstops, dist = 500) #500m buffer
closest_nightlife_busstops_buffer <- st_union(closest_nightlife_busstops_buffer) #join the buffers together
closest_nightlife_busstops_buffer <- st_cast(closest_nightlife_busstops_buffer,'POLYGON') #join the buffers together
closest_nightlife_busstops_buffer <- st_make_valid(closest_nightlife_busstops_buffer)
nightlife <- st_transform(nightlife, crs = 4326)
num_nightlife_captured <- nrow(st_intersection(nightlife, closest_nightlife_busstops_buffer))
percentage_captured <- num_nightlife_captured / nrow(nightlife)
print(percentage_captured)
#map to show how the kde looks like with all nightlife spots
tm_shape(central_area) + tm_borders() +
tm_basemap('OpenStreetMap') +
tm_shape(closest_nightlife_busstops_buffer) + tm_fill(col = 'yellow') + tm_borders() +
tm_shape(nightlife) + tm_bubbles(size = 0.025, col = "black")  +
tm_compass(type="8star", size = 2) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.5,
legend.title.size = 1,
title="Busstop buffer for nightlife locations in Singapore",
title.position = c('left', 'top'))
#map to show how the kde looks like with all nightlife spots
tm_shape(base_map) + tm_borders() +
tm_shape(closest_nightlife_busstops_buffer) + tm_fill(col = 'yellow') + tm_borders() +
tm_shape(nightlife) + tm_bubbles(size = 0.025, col = "black")  +
tm_compass(type="8star", size = 2) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.5,
legend.title.size = 1,
title="Busstop buffer for nightlife locations in Singapore",
title.position = c('left', 'top'))
nightlife <- st_transform(nightlife, crs = 4326)
num_nightlife_captured <- nrow(st_intersection(nightlife, closest_nightlife_busstops_buffer))
percentage_captured <- num_nightlife_captured / nrow(nightlife)
print(percentage_captured)
#500m radius: 71.0% nightlife captured
combined_base_map_nightlife <- central_area %>%
group_by(REGION_N) %>%
summarise(geometry = st_combine(geometry))
nightlife <- st_transform(nightlife, crs = 4326)
num_nightlife_captured <- nrow(st_intersection(nightlife, closest_nightlife_busstops_buffer))
percentage_captured <- num_nightlife_captured / nrow(nightlife)
print(percentage_captured)
#500m radius: 71.0% nightlife captured
combined_base_map_nightlife <- base_map %>%
group_by(REGION_N) %>%
summarise(geometry = st_combine(geometry))
View(closest_nightlife_busstops)
#map to show how the kde looks like with all nightlife spots
tm_shape(base_map) + tm_borders() +
tm_shape(closest_nightlife_busstops_buffer) + tm_fill(col = 'yellow') + tm_borders() +
tm_shape(nightlife) + tm_bubbles(size = 0.025, col = "black")  +
tm_compass(type="8star", size = 2) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.5,
legend.title.size = 1,
title="Busstop buffer for nightlife locations in Singapore",
title.position = c('left', 'top'))
#map to show how the kde looks like with all nightlife spots
tm_shape(base_map) + tm_borders() +
tm_shape(closest_nightlife_busstops_buffer) + tm_fill(col = 'yellow') + tm_borders() +
tm_shape(nightlife) + tm_bubbles(size = 0.05, col = "black")  +
tm_compass(type="8star", size = 2) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.5,
legend.title.size = 1,
title="Busstop buffer for nightlife locations in Singapore",
title.position = c('left', 'top'))
#map to show how the kde looks like with all nightlife spots
tm_shape(base_map) + tm_borders() +
tm_shape(closest_nightlife_busstops_buffer) + tm_fill(col = 'yellow') + tm_borders() +
tm_shape(nightlife) + tm_bubbles(size = 0.05, col = "black")  +
tm_compass(type="8star", size = 2) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.5,
legend.title.size = 1,
title="Busstop buffer for nightlife locations in Singapore",
title.position = c('left', 'top'))
#map to show how the kde looks like with all nightlife spots
tm_shape(base_map) + tm_borders() +
tm_shape(closest_nightlife_busstops_buffer) + tm_fill(col = 'yellow') + tm_borders() +
tm_shape(nightlife) + tm_bubbles(size = 0.0005, col = "black")  +
tm_compass(type="8star", size = 2) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.5,
legend.title.size = 1,
title="Busstop buffer for nightlife locations in Singapore",
title.position = c('left', 'top'))
#map to show how the kde looks like with all nightlife spots
tm_shape(base_map) + tm_borders() +
tm_shape(closest_nightlife_busstops_buffer) + tm_fill(col = 'yellow') + tm_borders() +
tm_shape(nightlife) + tm_bubbles(size = 0.005, col = "black")  +
tm_compass(type="8star", size = 2) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.5,
legend.title.size = 1,
title="Busstop buffer for nightlife locations in Singapore",
title.position = c('left', 'top'))
tm_shape(base_map) + tm_borders() +
tm_shape(nightlife_centers_poly) + tm_fill(col = 'kde') + tm_borders() +
tm_shape(closest_nightlife_busstops) + tm_bubbles(size = 0.005, col = "black")  +
tm_compass(type="8star", size = 2) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.5,
legend.title.size = 1,
title="Busstops closest to centers in Singapore",
title.position = c('left', 'top'))
View(closest_nightlife_busstops)
#Now we want to add the region attribute to each datapoint for each busstop for later
#First extract out the polygons with the regions only
combined_base_map <- subzones %>%
group_by(REGION_N) %>%
summarise(geometry = st_combine(geometry))
combined_base_map <- st_transform(combined_base_map, crs = 4326)
combined_base_map <- st_make_valid(combined_base_map)
combined_base_map_nightlife <- central_area %>%
group_by(REGION_N) %>%
summarise(geometry = st_combine(geometry))
#Central area of SG
central_area <- base_map %>% filter(PLN_AREA_N %in% c('DOWNTOWN CORE', 'BUKIT MERAH', 'SINGAPORE RIVER', 'MUSEUM', 'RIVER VALLEY', 'ORCHARD','NEWTON','ROCHOR','TANGLIN', 'KALLANG'))
#Central area of SG
central_area <- subzones %>% filter(PLN_AREA_N %in% c('DOWNTOWN CORE', 'BUKIT MERAH', 'SINGAPORE RIVER', 'MUSEUM', 'RIVER VALLEY', 'ORCHARD','NEWTON','ROCHOR','TANGLIN', 'KALLANG'))
combined_base_map_nightlife <- central_area %>%
group_by(REGION_N) %>%
summarise(geometry = st_combine(geometry))
combined_base_map_nightlife <- st_transform(combined_base_map_nightlife, crs = 4326)
combined_base_map_nightlife <- st_make_valid(combined_base_map_nightlife)
final_closest_busstops_nightlife <- st_intersection(closest_nightlife_busstops,combined_base_map_nightlife) #get the regions for each busstop
final_closest_busstops_nightlife <- distinct(final_closest_busstops_nightlife) #remove duplicated rows
final_closest_busstops_nightlife <- final_closest_busstops_nightlife %>% rename(Region = REGION_N)
final_closest_busstops_nightlife <- st_intersection(closest_nightlife_busstops,combined_base_map_nightlife) #get the regions for each busstop
#Central area of SG
central_area <- subzones #%>% filter(PLN_AREA_N %in% c('DOWNTOWN CORE', 'BUKIT MERAH', 'SINGAPORE RIVER', 'MUSEUM', 'RIVER VALLEY', 'ORCHARD','NEWTON','ROCHOR','TANGLIN', 'KALLANG'))
final_closest_busstops_nightlife <- st_intersection(closest_nightlife_busstops,combined_base_map_nightlife) #get the regions for each busstop
combined_base_map_nightlife <- central_area %>%
group_by(REGION_N) %>%
summarise(geometry = st_combine(geometry))
combined_base_map_nightlife <- st_transform(combined_base_map_nightlife, crs = 4326)
combined_base_map_nightlife <- st_make_valid(combined_base_map_nightlife)
final_closest_busstops_nightlife <- st_intersection(closest_nightlife_busstops,combined_base_map_nightlife) #get the regions for each busstop
final_closest_busstops_nightlife <- distinct(final_closest_busstops_nightlife) #remove duplicated rows
final_closest_busstops_nightlife <- final_closest_busstops_nightlife %>% rename(Region = REGION_N)
st_write(final_closest_busstops_nightlife, "bus_stops_nightlife.geojson")
st_write(final_closest_busstops_nightlife, "bus_stops_nightlife_2.geojson")
nightlife_points <- as(nightlife, "Spatial")
nightlife_centers <- kde.points(nightlife_points, h = 500) #1km smoothing
nightlife_centers_sf <- st_as_sf(nightlife_centers)
nightlife_centers$kde <- nightlife_centers$kde * 1000000000
tm_shape(nightlife_centers) + tm_raster()
max(nightlife_centers$kde)
reclass_values_2 <- c(0,max(nightlife_centers$kde) / 7,1, #reclassify kde values from 0-1000 in group 1 and so on
max(nightlife_centers$kde) / 7,2 * max(nightlife_centers$kde) / 7,2,
2* max(nightlife_centers$kde) / 7,3 * max(nightlife_centers$kde) / 7,3,
3* max(nightlife_centers$kde) / 7,4 * max(nightlife_centers$kde) / 7,4,
4* max(nightlife_centers$kde) / 7,5 * max(nightlife_centers$kde) / 7,5,
5* max(nightlife_centers$kde) / 7,6 * max(nightlife_centers$kde) / 7,6,
6* max(nightlife_centers$kde) / 7,max(nightlife_centers$kde),7)
reclass_nightlife_centers <- reclassify(as(nightlife_centers, "RasterLayer"), reclass_values_2) #reclassify kde values to groups
nightlife_centers_poly <- rasterToPolygons(reclass_nightlife_centers, dissolve = T, digits = 6) #to make a polygon layer
nightlife_centers_poly <- st_as_sf(nightlife_centers_poly) #to make an SF object
nightlife_centers_poly <- nightlife_centers_poly[-c(1,2),] #remove polys with low kde values
nightlife_centers_poly <- st_cast(nightlife_centers_poly,'POLYGON') #to split multipolygon to polygon to obtain centers
#Central area of SG
central_area <- subzones #%>% filter(PLN_AREA_N %in% c('DOWNTOWN CORE', 'BUKIT MERAH', 'SINGAPORE RIVER', 'MUSEUM', 'RIVER VALLEY', 'ORCHARD','NEWTON','ROCHOR','TANGLIN', 'KALLANG'))
#map to show how the kde looks like with all nightlife spots
tm_shape(base_map) + tm_borders() +
tm_shape(nightlife_centers_poly) + tm_fill(col = 'kde') + tm_borders() +
tm_shape(nightlife) + tm_bubbles(size = 0.001, col = "black")  +
tm_compass(type="8star", size = 2) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.5,
legend.title.size = 1,
title="KDE of Nightlife locations in Singapore",
title.position = c('left', 'top'))
nightlife_centers_sf <- st_as_sf(nightlife_centers)
nightlife_centers$kde <- nightlife_centers$kde * 1000000000
nightlife_centers <- kde.points(nightlife_points, h = 750) #1km smoothing
nightlife_centers_sf <- st_as_sf(nightlife_centers)
nightlife_centers$kde <- nightlife_centers$kde * 1000000000
tm_shape(nightlife_centers) + tm_raster()
max(nightlife_centers$kde)
reclass_values_2 <- c(0,max(nightlife_centers$kde) / 7,1, #reclassify kde values from 0-1000 in group 1 and so on
max(nightlife_centers$kde) / 7,2 * max(nightlife_centers$kde) / 7,2,
2* max(nightlife_centers$kde) / 7,3 * max(nightlife_centers$kde) / 7,3,
3* max(nightlife_centers$kde) / 7,4 * max(nightlife_centers$kde) / 7,4,
4* max(nightlife_centers$kde) / 7,5 * max(nightlife_centers$kde) / 7,5,
5* max(nightlife_centers$kde) / 7,6 * max(nightlife_centers$kde) / 7,6,
6* max(nightlife_centers$kde) / 7,max(nightlife_centers$kde),7)
nightlife_points <- as(nightlife, "Spatial")
nightlife_centers <- kde.points(nightlife_points, h = 750) #1km smoothing
nightlife_centers_sf <- st_as_sf(nightlife_centers)
tm_shape(nightlife_centers) + tm_raster()
nightlife <- st_read('dataset/processed_datasets/nightlife_locations.geojson', crs = st_crs(subzones))
nightlife_points <- as(nightlife, "Spatial")
nightlife_centers <- kde.points(nightlife_points, h = 500) #1km smoothing
nightlife_centers_sf <- st_as_sf(nightlife_centers)
tm_shape(nightlife_centers) + tm_raster()
nightlife_centers$kde <- nightlife_centers$kde * 1000000000
reclass_values_2 <- c(0,max(nightlife_centers$kde) / 7,1, #reclassify kde values from 0-1000 in group 1 and so on
max(nightlife_centers$kde) / 7,2 * max(nightlife_centers$kde) / 7,2,
2* max(nightlife_centers$kde) / 7,3 * max(nightlife_centers$kde) / 7,3,
3* max(nightlife_centers$kde) / 7,4 * max(nightlife_centers$kde) / 7,4,
4* max(nightlife_centers$kde) / 7,5 * max(nightlife_centers$kde) / 7,5,
5* max(nightlife_centers$kde) / 7,6 * max(nightlife_centers$kde) / 7,6,
6* max(nightlife_centers$kde) / 7,max(nightlife_centers$kde),7)
reclass_nightlife_centers <- reclassify(as(nightlife_centers, "RasterLayer"), reclass_values_2) #reclassify kde values to groups
nightlife_centers_poly <- rasterToPolygons(reclass_nightlife_centers, dissolve = T, digits = 6) #to make a polygon layer
nightlife_centers_poly <- st_as_sf(nightlife_centers_poly) #to make an SF object
nightlife_centers_poly <- nightlife_centers_poly[-c(1,2),] #remove polys with low kde values
nightlife_centers_poly <- st_cast(nightlife_centers_poly,'POLYGON') #to split multipolygon to polygon to obtain centers
#map to show how the kde looks like with all nightlife spots
tm_shape(base_map) + tm_borders() +
tm_shape(nightlife_centers_poly) + tm_fill(col = 'kde') + tm_borders() +
tm_shape(nightlife) + tm_bubbles(size = 0.001, col = "black")  +
tm_compass(type="8star", size = 2) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.5,
legend.title.size = 1,
title="KDE of Nightlife locations in Singapore",
title.position = c('left', 'top'))
reclass_nightlife_centers <- reclassify(as(nightlife_centers, "RasterLayer"), reclass_values_2) #reclassify kde values to groups
nightlife_centers_poly <- rasterToPolygons(reclass_nightlife_centers, dissolve = T, digits = 6) #to make a polygon layer
nightlife_centers_poly <- st_as_sf(nightlife_centers_poly) #to make an SF object
nightlife_centers_poly <- nightlife_centers_poly[-c(1),] #remove polys with low kde values
nightlife_centers_poly <- st_cast(nightlife_centers_poly,'POLYGON') #to split multipolygon to polygon to obtain centers
#map to show how the kde looks like with all nightlife spots
tm_shape(base_map) + tm_borders() +
tm_shape(nightlife_centers_poly) + tm_fill(col = 'kde groups') + tm_borders() +
tm_shape(nightlife) + tm_bubbles(size = 0.001, col = "black")  +
tm_compass(type="8star", size = 2) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.5,
legend.title.size = 1,
title="KDE of Nightlife locations in Singapore",
title.position = c('left', 'top'))
#map to show how the kde looks like with all nightlife spots
tm_shape(base_map) + tm_borders() +
tm_shape(nightlife_centers_poly) + tm_fill(col = 'kde groups') + tm_borders() +
tm_shape(nightlife) + tm_bubbles(size = 0.001, col = "black")  +
tm_compass(type="8star", size = 2) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.5,
legend.title.size = 1,
title="KDE of Nightlife locations in Singapore",
title.position = c('left', 'top'))
#map to show how the kde looks like with all nightlife spots
tm_shape(base_map) + tm_borders() +
tm_shape(nightlife_centers_poly) + tm_fill(col = 'kde', title = 'kde groups') + tm_borders() +
tm_shape(nightlife) + tm_bubbles(size = 0.001, col = "black")  +
tm_compass(type="8star", size = 2) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.5,
legend.title.size = 1,
title="KDE of Nightlife locations in Singapore",
title.position = c('left', 'top'))
reclass_nightlife_centers <- reclassify(as(nightlife_centers, "RasterLayer"), reclass_values_2) #reclassify kde values to groups
nightlife_centers_poly <- rasterToPolygons(reclass_nightlife_centers, dissolve = T, digits = 6) #to make a polygon layer
nightlife_centers_poly <- st_as_sf(nightlife_centers_poly) #to make an SF object
#nightlife_centers_poly <- nightlife_centers_poly[-c(1),] #remove polys with low kde values
nightlife_centers_poly <- st_cast(nightlife_centers_poly,'POLYGON') #to split multipolygon to polygon to obtain centers
#map to show how the kde looks like with all nightlife spots
tm_shape(base_map) + tm_borders() +
tm_shape(nightlife_centers_poly) + tm_fill(col = 'kde', title = 'kde groups') + tm_borders() +
tm_shape(nightlife) + tm_bubbles(size = 0.001, col = "black")  +
tm_compass(type="8star", size = 2) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.5,
legend.title.size = 1,
title="KDE of Nightlife locations in Singapore",
title.position = c('left', 'top'))
nightlife_centers <- kde.points(nightlife_points, h = 750) #1km smoothing
nightlife_centers_sf <- st_as_sf(nightlife_centers)
nightlife_centers$kde <- nightlife_centers$kde * 1000000000
reclass_values_2 <- c(0,max(nightlife_centers$kde) / 7,1, #reclassify kde values from 0-1000 in group 1 and so on
max(nightlife_centers$kde) / 7,2 * max(nightlife_centers$kde) / 7,2,
2* max(nightlife_centers$kde) / 7,3 * max(nightlife_centers$kde) / 7,3,
3* max(nightlife_centers$kde) / 7,4 * max(nightlife_centers$kde) / 7,4,
4* max(nightlife_centers$kde) / 7,5 * max(nightlife_centers$kde) / 7,5,
5* max(nightlife_centers$kde) / 7,6 * max(nightlife_centers$kde) / 7,6,
6* max(nightlife_centers$kde) / 7,max(nightlife_centers$kde),7)
reclass_nightlife_centers <- reclassify(as(nightlife_centers, "RasterLayer"), reclass_values_2) #reclassify kde values to groups
nightlife_centers_poly <- rasterToPolygons(reclass_nightlife_centers, dissolve = T, digits = 6) #to make a polygon layer
nightlife_centers_poly <- st_as_sf(nightlife_centers_poly) #to make an SF object
nightlife_centers_poly <- nightlife_centers_poly[-c(1),] #remove polys with low kde values
nightlife_centers_poly <- st_cast(nightlife_centers_poly,'POLYGON') #to split multipolygon to polygon to obtain centers
#map to show how the kde looks like with all nightlife spots
tm_shape(base_map) + tm_borders() +
tm_shape(nightlife_centers_poly) + tm_fill(col = 'kde', title = 'kde groups') + tm_borders() +
tm_shape(nightlife) + tm_bubbles(size = 0.001, col = "black")  +
tm_compass(type="8star", size = 2) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.5,
legend.title.size = 1,
title="KDE of Nightlife locations in Singapore",
title.position = c('left', 'top'))
reclass_nightlife_centers <- reclassify(as(nightlife_centers, "RasterLayer"), reclass_values_2) #reclassify kde values to groups
nightlife_centers_poly <- rasterToPolygons(reclass_nightlife_centers, dissolve = T, digits = 6) #to make a polygon layer
nightlife_centers_poly <- st_as_sf(nightlife_centers_poly) #to make an SF object
nightlife_centers_poly <- nightlife_centers_poly[-c(1,2),] #remove polys with low kde values
nightlife_centers_poly <- st_cast(nightlife_centers_poly,'POLYGON') #to split multipolygon to polygon to obtain centers
#map to show how the kde looks like with all nightlife spots
tm_shape(base_map) + tm_borders() +
tm_shape(nightlife_centers_poly) + tm_fill(col = 'kde', title = 'kde groups') + tm_borders() +
tm_shape(nightlife) + tm_bubbles(size = 0.001, col = "black")  +
tm_compass(type="8star", size = 2) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.5,
legend.title.size = 1,
title="KDE of Nightlife locations in Singapore",
title.position = c('left', 'top'))
#map to show how the kde looks like with all nightlife spots
tm_shape(base_map) + tm_borders() +
tm_shape(nightlife_centers_poly) + tm_fill(col = 'kde', title = 'kde group') + tm_borders() +
tm_shape(nightlife) + tm_bubbles(size = 0.001, col = "black")  +
tm_compass(type="8star", size = 2) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.5,
legend.title.size = 1,
title="KDE of Nightlife locations in Singapore",
title.position = c('left', 'top'))
tm_shape(base_map) + tm_borders() +
tm_shape(nightlife_centers_poly) + tm_fill(col = 'kde', title = 'kde group') + tm_borders() +
tm_shape(nightlife_centers_points) + tm_bubbles(size = 0.005, col = "black")  +
tm_compass(type="8star", size = 2) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.5,
legend.title.size = 1,
title="Nightlife locations centers in Singapore",
title.position = c('left', 'top'))
tm_shape(base_map) + tm_borders() +
tm_shape(nightlife_centers_poly) + tm_fill(col = 'kde') + tm_borders() +
tm_shape(closest_nightlife_busstops) + tm_bubbles(size = 0.005, col = "black")  +
tm_compass(type="8star", size = 2) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.5,
legend.title.size = 1,
title="Busstops closest to centers in Singapore",
title.position = c('left', 'top'))
tm_shape(base_map) + tm_borders() +
tm_shape(nightlife_centers_poly) + tm_fill(col = 'kde', title = 'kde group') + tm_borders() +
tm_shape(closest_nightlife_busstops) + tm_bubbles(size = 0.005, col = "black")  +
tm_compass(type="8star", size = 2) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.5,
legend.title.size = 1,
title="Busstops closest to centers in Singapore",
title.position = c('left', 'top'))
#busstops
tm_shape(base_map) + tm_borders() +
tm_shape(hdb_centers_poly) + tm_fill(col = 'kde') + tm_borders() +
tm_shape(closest_busstops) + tm_bubbles(size = 0.2, scale = 0.5, col = 'black')  +
tm_compass(type="8star", size = 2) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.5,
legend.title.size = 1,
title="Central busstop locations in Singapore with KDEs",
title.size = 1,
title.position = c('left', 'top'))
#busstops
tm_shape(base_map) + tm_borders() +
tm_shape(hdb_centers_poly) + tm_fill(col = 'kde', title = 'kde group') + tm_borders() +
tm_shape(closest_busstops) + tm_bubbles(size = 0.2, scale = 0.5, col = 'black')  +
tm_compass(type="8star", size = 2) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.5,
legend.title.size = 1,
title="Central busstop locations in Singapore with KDEs",
title.size = 1,
title.position = c('left', 'top'))
#Map to show how bustops fare with kdes
tm_shape(base_map) + tm_borders() +
#tm_shape(hdb_centers_poly) + tm_fill(col = 'kde', title = 'kde group') + tm_borders() +
tm_shape(bus_spatial) + tm_bubbles(size = 0.15, scale = 0.5, col = 'black')  +
tm_compass(type="8star", size = 2) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.5,
legend.title.size = 1,
title="Busstop locations in Singapore",
title.size = 1,
title.position = c('left', 'top'))
#Plot the points to visualise how the values look #plot takes a while to load
yth_spatial_map <- tm_shape(base_map) + tm_borders() +
tm_shape(yth_spatial) + tm_bubbles(size = 0.05, col = 'youth', border.alpha = 0)  +
tm_compass(type="8star", size = 2) +
tm_scale_bar(width = 0.15) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "top"),
legend.text.size = 0.25,
legend.title.size = 0.5,
title="Youth densities in Singapore",
title.position = c('left', 'top'))
yth_spatial_map
#Busstop buffers with ALL HDBs
tm_shape(base_map) + tm_borders() +
#tm_shape(closest_busstops_buffer) + tm_polygons() +
tm_shape(hdb_spatial) + tm_bubbles(size = 0.15, scale = 0.5, col = 'black')  +
tm_compass(type="8star", size = 2) +
tm_scale_bar(width = 0.15) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.5,
legend.title.size = 1,
title="Central busstop buffer  with  HDBs",
title.size = 1,
title.position = c('left', 'top'))
#Busstop buffers with ALL HDBs
tm_shape(base_map) + tm_borders() +
#tm_shape(closest_busstops_buffer) + tm_polygons() +
tm_shape(hdb_spatial) + tm_bubbles(size = 0.15, scale = 0.5, col = 'black')  +
tm_compass(type="8star", size = 2) +
tm_scale_bar(width = 0.15) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.5,
legend.title.size = 1,
title="HDBs in Singapore",
title.size = 1,
title.position = c('left', 'top'))
#Plot the points to visualise how the values look #plot takes a while to load
yth_spatial_map <- tm_shape(base_map) + tm_borders() +
tm_shape(yth_spatial) + tm_bubbles(size = 0.05, col = 'youth', border.alpha = 0, title = 'youth density (%)')  +
tm_compass(type="8star", size = 2) +
tm_scale_bar(width = 0.15) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "top"),
legend.text.size = 0.25,
legend.title.size = 0.5,
title="Youth densities in Singapore",
title.position = c('left', 'top'))
#Plot the points to visualise how the values look #plot takes a while to load
yth_spatial_map <- tm_shape(base_map) + tm_borders() +
tm_shape(yth_spatial) + tm_bubbles(size = 0.05, col = 'youth', border.alpha = 0, title = 'youth density (%)')  +
tm_compass(type="8star", size = 2) +
tm_scale_bar(width = 0.15) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "top"),
legend.text.size = 0.25,
legend.title.size = 0.5,
title="Youth densities in Singapore",
title.position = c('left', 'top'))
#Plot the points to visualise how the values look #plot takes a while to load
yth_spatial_map <- tm_shape(base_map) + tm_borders() +
tm_shape(yth_spatial) + tm_bubbles(size = 0.05, col = 'youth', border.alpha = 0)  +
tm_compass(type="8star", size = 2) +
tm_scale_bar(width = 0.15) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "top"),
legend.text.size = 0.25,
legend.title.size = 0.5,
title="Youth densities (%) in Singapore",
title.position = c('left', 'top'))
yth_spatial_map
#HDB Centroids
tm_shape(base_map) + tm_borders() +
tm_shape(hdb_centers_poly) + tm_fill(col = 'kde', title = 'kde group') + tm_borders() +
tm_shape(hdb_centers_points) + tm_bubbles(size = 0.2, scale = 0.5, col = 'black')  +
tm_compass(type="8star", size = 2) +
tm_layout(legend.format = list(digits = 0),
legend.position = c("left", "bottom"),
legend.text.size = 0.5,
legend.title.size = 1,
title="Central busstop locations in Singapore with KDEs",
title.size = 1,
title.position = c('left', 'top'))
